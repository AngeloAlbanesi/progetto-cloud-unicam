@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using ProvinciaTrentoHotel.ViewModels;
@using FunzioniDatiHotell.Modelli;
@model HomeDettagliHotelViewModel



@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8" />
    <title>Dettagli Hotel</title>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
</head>
<body>

    <h1>Struttura Alberghiera - Provincia Autonoma di Trento</h1>
    <h2>Dettagli Hotel</h2>

    <p><strong>Partita IVA:</strong> @Model.hotelDettagliato.PartitaIva</p>
    <p><strong>Comune:</strong> @Model.hotelDettagliato.Comune</p>
    <p><strong>Categoria:</strong> @Model.hotelDettagliato.Categoria</p>
    <p><strong>Denominazione Struttura:</strong> @Model.hotelDettagliato.DenominazioneStruttura</p>
    <p><strong>Indirizzo:</strong> @Model.hotelDettagliato.Indirizzo</p>
    <p><strong>Frazione:</strong> @Model.hotelDettagliato.Frazione</p>
    <p><strong>CAP:</strong> @Model.hotelDettagliato.CAP</p>
    <p><strong>Telefono:</strong> @Model.hotelDettagliato.Telefono</p>
    <p><strong>FAX:</strong> @Model.hotelDettagliato.FAX</p>
    <p><strong>Email:</strong> @Model.hotelDettagliato.IndirizzoPostaElettronica</p>
    <p><strong>Tipologia:</strong> @Model.hotelDettagliato.Tipologia</p>
    <p><strong>Tipologia Servizio:</strong> @Model.hotelDettagliato.TipologiaServizio</p>
    <p><strong>Altitudine:</strong> @Model.hotelDettagliato.Altitudine</p>
    <p><strong>Numero Posti Letto:</strong> @Model.hotelDettagliato.NumeroPostiletto</p>

    <h2>Posizione sulla Mappa</h2>
    <div id="map" style="height: 400px;"></div>

    <script>
        async function loadMap() {
            const baseUrl = 'https://nominatim.openstreetmap.org/search';

            async function fetchCoordinates(query) {
                const params = new URLSearchParams({
                    q: query,
                    format: 'json',
                    addressdetails: 1,
                    limit: 1
                });

                const response = await fetch(`${baseUrl}?${params}`);
                if (!response.ok) throw new Error('Errore nella richiesta a Nominatim');

                const data = await response.json();
                return data.length > 0 ? data[0] : null;
            }

            try {
                let location = await fetchCoordinates(`${'@Model.hotelDettagliato.Indirizzo'}, ${'@Model.hotelDettagliato.Frazione'}, ${'@Model.hotelDettagliato.Comune'}`);

                if (!location) {
                    location = await fetchCoordinates(`${'@Model.hotelDettagliato.Frazione'}, ${'@Model.hotelDettagliato.Comune'}`);
                }

                if (!location) {
                    location = await fetchCoordinates('@Model.hotelDettagliato.Comune');
                }

                if (location) {
                    const lat = location.lat;
                    const lon = location.lon;

                    const map = L.map('map').setView([lat, lon], 15);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        maxZoom: 19,
                        attribution: '© OpenStreetMap contributors'
                    }).addTo(map);

                    L.marker([lat, lon]).addTo(map)
                        .bindPopup(location.display_name)
                        .openPopup();
                } else {
                    alert('Indirizzo non trovato!');
                }
            } catch (error) {
                console.error('Errore durante il caricamento della mappa:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', loadMap);
    </script>

</body>
</html>

 <!--

<html>
<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <title>Dettagli Hotel</title>
  
</head>
<body>
    <h1>Struttura Alberghiera Provincia Autonoma Di Trento</h1>


    PartitaIva: @Model.hotelDettagliato.PartitaIva <br />

    Comune: @Model.hotelDettagliato.Comune
    <br />

    Categoria: @Model.hotelDettagliato.Categoria
    <br />

    Denominazione Struttura: @Model.hotelDettagliato.DenominazioneStruttura
    <br />

    Indirizzo: @Model.hotelDettagliato.Indirizzo
    <br />

    Frazione: @Model.hotelDettagliato.Frazione
    <br />

    CAP: @Model.hotelDettagliato.CAP
    <br />

    Telefono: @Model.hotelDettagliato.Telefono
    <br />

    FAX: @Model.hotelDettagliato.FAX
    <br />

    Indirizzo Posta Elettronica: @Model.hotelDettagliato.IndirizzoPostaElettronica
    <br />

    Tipologia: @Model.hotelDettagliato.Tipologia
    <br />

    TipologiaServizio: @Model.hotelDettagliato.TipologiaServizio
    <br />

    Altitudine: @Model.hotelDettagliato.Altitudine
    <br />

    NumeroPostiletto: @Model.hotelDettagliato.NumeroPostiletto
    <br />



    <div id="map" style="height: 400px;"></div>


    <script>
    async function loadMap() {
    const baseUrl = 'https://nominatim.openstreetmap.org/search';

    async function fetchCoordinates(query) {
    const params = new URLSearchParams({
    q: query,
    format: 'json',
    addressdetails: 1,
    limit: 1
    });

    const response = await fetch(`${baseUrl}?${params}`);
    if (!response.ok) throw new Error('Errore nella richiesta a Nominatim');

    const data = await response.json();
    return data.length > 0 ? data[0] : null;
    }

    try {
    let location = await fetchCoordinates(`${'@Model.hotelDettagliato.Indirizzo'}, ${'@Model.hotelDettagliato.Frazione'}, ${'@Model.hotelDettagliato.Comune'}`);

    if (!location) {
    // Fallback a frazione + comune
    location = await fetchCoordinates(`${'@Model.hotelDettagliato.Frazione'}, ${'@Model.hotelDettagliato.Comune'}`);
    }

    if (!location) {
    // Fallback solo al comune
    location = await fetchCoordinates('@Model.hotelDettagliato.Comune');
    }

    if (location) {
    const lat = location.lat;
    const lon = location.lon;

    // Creazione della mappa con Leaflet
    const map = L.map('map').setView([lat, lon], 15); // Zoom impostato a 15
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    // Aggiunta di un marcatore
    L.marker([lat, lon]).addTo(map)
    .bindPopup(location.display_name)
    .openPopup();
    } else {
    alert('Indirizzo non trovato!');
    }
    } catch (error) {
    console.error('Errore durante il caricamento della mappa:', error);
    }
    }

    document.addEventListener('DOMContentLoaded', loadMap);
</script>

</body>



</html>
-->
